---
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";
import BaseHead from "../components/BaseHead.astro";
import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";

interface Props {
    title: string;
    description: string;
    createdDate: Date;
    updatedDate?: Date;
    heroImage?: ImageMetadata | string;
    projectUrl?: string;
    repoUrl?: string;
    authors?: string[];
}

const {
    title,
    description,
    createdDate,
    updatedDate,
    heroImage,
    projectUrl,
    repoUrl,
    authors,
} = Astro.props as Props;
---

<html lang="en">
    <head>
        <BaseHead title={title} description={description} />
        <style>
            main {
                width: calc(100% - 2em);
                max-width: 100%;
                margin: 0;
            }
            .hero-image {
                width: 100%;
            }
            .hero-image img {
                display: block;
                margin: 0 auto;
                border-radius: 12px;
                box-shadow: var(--box-shadow);
            }
            .prose {
                width: 720px;
                max-width: calc(100% - 2em);
                margin: auto;
                padding: 1em;
                color: var(--text);
            }
            .title {
                margin-bottom: 1em;
                padding: 1em 0;
                text-align: center;
                line-height: 1;
            }
            .title h1 {
                margin: 0 0 0.5em 0;
            }
            .meta {
                margin-bottom: 0.5em;
                color: var(--text-gray);
                display: flex;
                flex-wrap: wrap;
                /* Only vertical gap; horizontal spacing is handled by separators */
                row-gap: 0.5rem;
                column-gap: 0;
                justify-content: center;
            }
            /* Add centered dot separators between meta items */
            .meta > * + *::before {
                content: '·';
                margin: 0 0.5rem;
                color: var(--text-gray);
            }
            .links {
                display: inline-flex;
                align-items: center;
                column-gap: 0;
                white-space: nowrap;
            }
            .links a {
                color: var(--accent);
            }
            /* Add dot between multiple links (e.g., Live demo · Source) */
            .links a + a::before {
                content: '·';
                margin: 0 0.5rem;
                color: var(--text-gray);
            }
        </style>
    </head>

    <body>
        <Header />
        <main>
            <article transition:animate="fade">
                <div class="hero-image">
                    {
                        heroImage &&
                            (typeof heroImage === "string" ? (
                                <img
                                    width="1020"
                                    height="510"
                                    src={heroImage}
                                    alt=""
                                    loading="lazy"
                                    transition:name={`post-image-${title}`}
                                />
                            ) : (
                                <Image
                                    width={1020}
                                    height={510}
                                    src={heroImage}
                                    alt=""
                                    transition:name={`post-image-${title}`}
                                />
                            ))
                    }
                </div>
                <div class="prose">
                    <div class="title">
                        <div class="meta">
                            <span>Started {createdDate.toDateString()}</span>
                            {
                                updatedDate && (
                                    <span>
                                        Updated {updatedDate.toDateString()}
                                    </span>
                                )
                            }
                            {
                                authors && authors.length > 0 && (
                                    <span>{authors.join(", ")}</span>
                                )
                            }
                            <span class="links">
                                {
                                    projectUrl && (
                                        <a
                                            href={projectUrl}
                                            target="_blank"
                                            rel="noopener"
                                        >
                                            Live demo
                                        </a>
                                    )
                                }
                                {
                                    repoUrl && (
                                        <a
                                            href={repoUrl}
                                            target="_blank"
                                            rel="noopener"
                                        >
                                            Source
                                        </a>
                                    )
                                }
                            </span>
                        </div>
                        <h1>{title}</h1>
                        <p>{description}</p>
                        <hr />
                    </div>
                    <slot />
                </div>
            </article>
        </main>
        <Footer />
    </body>
</html>
